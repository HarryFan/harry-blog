const _astro_dataLayerContent = [["Map", 1, 2, 9, 10], "meta::meta", ["Map", 3, 4, 5, 6, 7, 8], "astro-version", "5.7.13", "content-config-digest", "8d1b7566f4d3c391", "astro-config-digest", '{"root":{},"srcDir":{},"publicDir":{},"outDir":{},"cacheDir":{},"site":"https://harryfan.github.io","compressHTML":true,"base":"/harry-blog/","trailingSlash":"ignore","output":"static","scopedStyleStrategy":"attribute","build":{"format":"directory","client":{},"server":{},"assets":"assets","assetsPrefix":"/harry-blog/","serverEntry":"entry.mjs","redirects":true,"inlineStylesheets":"auto","concurrency":1},"server":{"open":false,"host":true,"port":4324,"streaming":true,"allowedHosts":[]},"redirects":{},"image":{"endpoint":{"route":"/_image"},"service":{"entrypoint":"astro/assets/services/sharp","config":{}},"domains":[],"remotePatterns":[]},"devToolbar":{"enabled":true},"markdown":{"syntaxHighlight":{"type":"shiki","excludeLangs":["math"]},"shikiConfig":{"langs":[],"langAlias":{},"theme":"github-dark","themes":{},"wrap":false,"transformers":[]},"remarkPlugins":[],"rehypePlugins":[],"remarkRehype":{},"gfm":true,"smartypants":true},"security":{"checkOrigin":true},"env":{"schema":{},"validateSecrets":false},"experimental":{"clientPrerender":false,"contentIntellisense":false,"responsiveImages":false,"headingIdCompat":false,"preserveScriptOrder":false},"legacy":{"collections":false}}', "blog", ["Map", 11, 12, 22, 23, 40, 41, 56, 57, 72, 73, 121, 122, 191, 192], "using-mdx", { id: 11, data: 13, body: 18, filePath: 19, digest: 20, deferredRender: 21 }, { title: 14, description: 15, pubDate: 16, heroImage: 17 }, "Using MDX", "Lorem ipsum dolor sit amet", ["Date", "2024-05-31T16:00:00.000Z"], "/blog-placeholder-5.jpg", `This theme comes with the [@astrojs/mdx](https://docs.astro.build/en/guides/integrations-guide/mdx/) integration installed and configured in your \`astro.config.mjs\` config file. If you prefer not to use MDX, you can disable support by removing the integration from your config file.

## Why MDX?

MDX is a special flavor of Markdown that supports embedded JavaScript & JSX syntax. This unlocks the ability to [mix JavaScript and UI Components into your Markdown content](https://docs.astro.build/en/guides/markdown-content/#mdx-features) for things like interactive charts or alerts.

If you have existing content authored in MDX, this integration will hopefully make migrating to Astro a breeze.

## Example

Here is how you import and use a UI component inside of MDX.  
When you open this page in the browser, you should see the clickable button below.

import HeaderLink from '../../components/HeaderLink.astro';

<HeaderLink href="#" onclick="alert('clicked!')">
	Embedded component in MDX
</HeaderLink>

## More Links

- [MDX Syntax Documentation](https://mdxjs.com/docs/what-is-mdx)
- [Astro Usage Documentation](https://docs.astro.build/en/guides/markdown-content/#markdown-and-mdx-pages)
- **Note:** [Client Directives](https://docs.astro.build/en/reference/directives-reference/#client-directives) are still required to create interactive components. Otherwise, all components in your MDX will render as static HTML (no JavaScript) by default.`, "src/content/blog/using-mdx.mdx", "e841a54ebe3d0df7", true, "first-post", { id: 22, data: 24, body: 28, filePath: 29, digest: 30, rendered: 31 }, { title: 25, description: 15, pubDate: 26, heroImage: 27 }, "First post", ["Date", "2022-07-07T16:00:00.000Z"], "/blog-placeholder-3.jpg", "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Vitae ultricies leo integer malesuada nunc vel risus commodo viverra. Adipiscing enim eu turpis egestas pretium. Euismod elementum nisi quis eleifend quam adipiscing. In hac habitasse platea dictumst vestibulum. Sagittis purus sit amet volutpat. Netus et malesuada fames ac turpis egestas. Eget magna fermentum iaculis eu non diam phasellus vestibulum lorem. Varius sit amet mattis vulputate enim. Habitasse platea dictumst quisque sagittis. Integer quis auctor elit sed vulputate mi. Dictumst quisque sagittis purus sit amet.\n\nMorbi tristique senectus et netus. Id semper risus in hendrerit gravida rutrum quisque non tellus. Habitasse platea dictumst quisque sagittis purus sit amet. Tellus molestie nunc non blandit massa. Cursus vitae congue mauris rhoncus. Accumsan tortor posuere ac ut. Fringilla urna porttitor rhoncus dolor. Elit ullamcorper dignissim cras tincidunt lobortis. In cursus turpis massa tincidunt dui ut ornare lectus. Integer feugiat scelerisque varius morbi enim nunc. Bibendum neque egestas congue quisque egestas diam. Cras ornare arcu dui vivamus arcu felis bibendum. Dignissim suspendisse in est ante in nibh mauris. Sed tempus urna et pharetra pharetra massa massa ultricies mi.\n\nMollis nunc sed id semper risus in. Convallis a cras semper auctor neque. Diam sit amet nisl suscipit. Lacus viverra vitae congue eu consequat ac felis donec. Egestas integer eget aliquet nibh praesent tristique magna sit amet. Eget magna fermentum iaculis eu non diam. In vitae turpis massa sed elementum. Tristique et egestas quis ipsum suspendisse ultrices. Eget lorem dolor sed viverra ipsum. Vel turpis nunc eget lorem dolor sed viverra. Posuere ac ut consequat semper viverra nam. Laoreet suspendisse interdum consectetur libero id faucibus. Diam phasellus vestibulum lorem sed risus ultricies tristique. Rhoncus dolor purus non enim praesent elementum facilisis. Ultrices tincidunt arcu non sodales neque. Tempus egestas sed sed risus pretium quam vulputate. Viverra suspendisse potenti nullam ac tortor vitae purus faucibus ornare. Fringilla urna porttitor rhoncus dolor purus non. Amet dictum sit amet justo donec enim.\n\nMattis ullamcorper velit sed ullamcorper morbi tincidunt. Tortor posuere ac ut consequat semper viverra. Tellus mauris a diam maecenas sed enim ut sem viverra. Venenatis urna cursus eget nunc scelerisque viverra mauris in. Arcu ac tortor dignissim convallis aenean et tortor at. Curabitur gravida arcu ac tortor dignissim convallis aenean et tortor. Egestas tellus rutrum tellus pellentesque eu. Fusce ut placerat orci nulla pellentesque dignissim enim sit amet. Ut enim blandit volutpat maecenas volutpat blandit aliquam etiam. Id donec ultrices tincidunt arcu. Id cursus metus aliquam eleifend mi.\n\nTempus quam pellentesque nec nam aliquam sem. Risus at ultrices mi tempus imperdiet. Id porta nibh venenatis cras sed felis eget velit. Ipsum a arcu cursus vitae. Facilisis magna etiam tempor orci eu lobortis elementum. Tincidunt dui ut ornare lectus sit. Quisque non tellus orci ac. Blandit libero volutpat sed cras. Nec tincidunt praesent semper feugiat nibh sed pulvinar proin gravida. Egestas integer eget aliquet nibh praesent tristique magna.", "src/content/blog/first-post.md", "75e7f8a4695b714a", { html: 32, metadata: 33 }, "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Vitae ultricies leo integer malesuada nunc vel risus commodo viverra. Adipiscing enim eu turpis egestas pretium. Euismod elementum nisi quis eleifend quam adipiscing. In hac habitasse platea dictumst vestibulum. Sagittis purus sit amet volutpat. Netus et malesuada fames ac turpis egestas. Eget magna fermentum iaculis eu non diam phasellus vestibulum lorem. Varius sit amet mattis vulputate enim. Habitasse platea dictumst quisque sagittis. Integer quis auctor elit sed vulputate mi. Dictumst quisque sagittis purus sit amet.</p>\n<p>Morbi tristique senectus et netus. Id semper risus in hendrerit gravida rutrum quisque non tellus. Habitasse platea dictumst quisque sagittis purus sit amet. Tellus molestie nunc non blandit massa. Cursus vitae congue mauris rhoncus. Accumsan tortor posuere ac ut. Fringilla urna porttitor rhoncus dolor. Elit ullamcorper dignissim cras tincidunt lobortis. In cursus turpis massa tincidunt dui ut ornare lectus. Integer feugiat scelerisque varius morbi enim nunc. Bibendum neque egestas congue quisque egestas diam. Cras ornare arcu dui vivamus arcu felis bibendum. Dignissim suspendisse in est ante in nibh mauris. Sed tempus urna et pharetra pharetra massa massa ultricies mi.</p>\n<p>Mollis nunc sed id semper risus in. Convallis a cras semper auctor neque. Diam sit amet nisl suscipit. Lacus viverra vitae congue eu consequat ac felis donec. Egestas integer eget aliquet nibh praesent tristique magna sit amet. Eget magna fermentum iaculis eu non diam. In vitae turpis massa sed elementum. Tristique et egestas quis ipsum suspendisse ultrices. Eget lorem dolor sed viverra ipsum. Vel turpis nunc eget lorem dolor sed viverra. Posuere ac ut consequat semper viverra nam. Laoreet suspendisse interdum consectetur libero id faucibus. Diam phasellus vestibulum lorem sed risus ultricies tristique. Rhoncus dolor purus non enim praesent elementum facilisis. Ultrices tincidunt arcu non sodales neque. Tempus egestas sed sed risus pretium quam vulputate. Viverra suspendisse potenti nullam ac tortor vitae purus faucibus ornare. Fringilla urna porttitor rhoncus dolor purus non. Amet dictum sit amet justo donec enim.</p>\n<p>Mattis ullamcorper velit sed ullamcorper morbi tincidunt. Tortor posuere ac ut consequat semper viverra. Tellus mauris a diam maecenas sed enim ut sem viverra. Venenatis urna cursus eget nunc scelerisque viverra mauris in. Arcu ac tortor dignissim convallis aenean et tortor at. Curabitur gravida arcu ac tortor dignissim convallis aenean et tortor. Egestas tellus rutrum tellus pellentesque eu. Fusce ut placerat orci nulla pellentesque dignissim enim sit amet. Ut enim blandit volutpat maecenas volutpat blandit aliquam etiam. Id donec ultrices tincidunt arcu. Id cursus metus aliquam eleifend mi.</p>\n<p>Tempus quam pellentesque nec nam aliquam sem. Risus at ultrices mi tempus imperdiet. Id porta nibh venenatis cras sed felis eget velit. Ipsum a arcu cursus vitae. Facilisis magna etiam tempor orci eu lobortis elementum. Tincidunt dui ut ornare lectus sit. Quisque non tellus orci ac. Blandit libero volutpat sed cras. Nec tincidunt praesent semper feugiat nibh sed pulvinar proin gravida. Egestas integer eget aliquet nibh praesent tristique magna.</p>", { headings: 34, localImagePaths: 35, remoteImagePaths: 36, frontmatter: 37, imagePaths: 39 }, [], [], [], { title: 25, description: 15, pubDate: 38, heroImage: 27 }, "Jul 08 2022", [], "third-post", { id: 40, data: 42, body: 28, filePath: 46, digest: 47, rendered: 48 }, { title: 43, description: 15, pubDate: 44, heroImage: 45 }, "Third post", ["Date", "2022-07-21T16:00:00.000Z"], "/blog-placeholder-2.jpg", "src/content/blog/third-post.md", "0136288906671273", { html: 32, metadata: 49 }, { headings: 50, localImagePaths: 51, remoteImagePaths: 52, frontmatter: 53, imagePaths: 55 }, [], [], [], { title: 43, description: 15, pubDate: 54, heroImage: 45 }, "Jul 22 2022", [], "second-post", { id: 56, data: 58, body: 28, filePath: 62, digest: 63, rendered: 64 }, { title: 59, description: 15, pubDate: 60, heroImage: 61 }, "Second post", ["Date", "2022-07-14T16:00:00.000Z"], "/blog-placeholder-4.jpg", "src/content/blog/second-post.md", "7d0b307575643987", { html: 32, metadata: 65 }, { headings: 66, localImagePaths: 67, remoteImagePaths: 68, frontmatter: 69, imagePaths: 71 }, [], [], [], { title: 59, description: 15, pubDate: 70, heroImage: 61 }, "Jul 15 2022", [], "2025-05-28-lottie-animation-tool", { id: 72, data: 74, body: 79, filePath: 80, digest: 81, rendered: 82 }, { title: 75, description: 76, pubDate: 77, heroImage: 78 }, "原來如此！我居然錯過了這個動畫神器這麼久😳", "探索 Lottie 動畫工具如何簡化網頁動畫開發，從設計到實現的完整指南", ["Date", "2025-05-28T00:00:00.000Z"], "/stagewise-full.BxTLA-IW.png", '最近在做官網動畫時，無意間發現一個超像發現新大陸的寶藏工具 —— **Lottie**。\n\n以前一直以為，網頁動畫要不是用 CSS 搞半天，不然就得拜託設計師用 AE 弄影片、轉 MP4、轉 GIF，整個超痛苦又重。\n\n但這次我真的要說一句：\n\n👉 **原來 Lottie 不只是給設計師用的，它根本就是動畫界的 CDN 啊！**\n\n<video width="100%" controls>\n  <source src="/videos/螢幕錄影_2025-05-22_上午8.51.25.mov" type="video/mp4">\n  您的瀏覽器不支援 video 標籤。\n</video>\n\n---\n\n## ✅ 原來 Lottie 有這些優勢我都不知道：\n\n1. **有成千上萬個免費動畫可以用**\n\n   👉 [LottieFiles](https://lottiefiles.com/) 裡面超多開源動畫，品質都很高，幾乎想得到的都有！\n\n2. **根本不用會 AE！**\n\n   雖然 Lottie 的來源動畫通常是從 After Effects 輸出，但我發現有個工具叫 [**LottieLab**](https://www.lottielab.com/)，完全可以在瀏覽器編輯動畫、改顏色\n   、加互動，而且還可以輸出成 JSON、GIF、MP4！\n\n3. **開發端整合爆簡單！**\n\n   只要裝一個套件 `@lottiefiles/lottie-player`，在 Vue、React、甚至原生 HTML 裡都能直接用 Web Component 播放動畫，還能設定 loop、autoplay、speed！\n\n---\n\n## 😳 原本還以為要去學 Canvas / WebGL...\n\n身為前端我一度以為，要做出炫炮動畫一定得學 canvas 或 WebGL，那種數學一堆又超吃效能的技術。但結果發現：\n\n👉 **只用 Lottie 生態系，速度快、品質高、動畫檔案還超輕量！**\n\n尤其像下面這些情境，用 Lottie 簡直剛剛好：\n\n- 行銷頁面的動畫 banner、CTA 動效\n- SaaS 登入頁或 Loading 動畫\n- App onboarding 過場動畫\n- 官網 Hero Section 的視覺吸引動畫\n- 聯絡表單送出時的小互動動畫\n\n這些**不需要 3D、即時計算**的動畫類型，用 Lottie 做真的是性價比超高。\n\n---\n\n## 🎯 不同角色的使用組合推薦\n\n| 身份                  | 建議工具組合                  | 特點                                   |\n| --------------------- | ----------------------------- | -------------------------------------- |\n| 前端工程師            | `lottie-player` + LottieFiles | 無腦套用開源動畫，開發效率爆表         |\n| 設計師                | AE + Bodymovin / LottieLab    | 自己做動畫，完整保有細節與控制權       |\n| UI 設計師（用 Figma） | Phase + LottieFiles           | 用 Figma 動畫轉出，直接傳給開發        |\n| 自媒體接案者          | LottieLab + JSON + GIF 輸出   | 可以當社群貼圖、Loading 特效，應用很廣 |\n\n---\n\n## 💰 那費用呢？免費嗎？\n\n- **LottieFiles**：免費瀏覽與下載素材\n- **LottieLab**：提供免費版，可線上編輯 Lottie 動畫，高階功能如串流、團隊協作需訂閱付費\n- **Phase（Figma 動畫插件）**：目前基本功能免費\n- **lottie-player 套件**：完全免費，可直接安裝使用\n\n---\n\n## 🔧 我怎麼用在實戰專案裡？\n\n我現在已經把這整合進我的 Vue 3 專案裡了，還加上了 Tailwind CSS 做 UI，打造一個「**vue-lottie-ui-starter**」樣板專案，只要一行 HTML 就能播放動畫，完全\n無痛整合！\n\n```html\n<lottie-player src="https://assets10.lottiefiles.com/packages/lf20_tll0j4bb.json" background="transparent" speed="1" loop autoplay />\n```\n\n---\n\n## 結語：拜託早點讓我知道這個啊！\n\nLottie 真的讓我重新認識了「動畫不只是設計師的事」，\n\n對前端來說，它就像是從 Photoshop 進入到 Canva 的感覺，**門檻降超多，效果卻一樣強大！**\n\n如果你跟我一樣還沒玩過，真的推薦馬上開一個 Lottie 專案來玩玩！\n\n---\n\n📌 推薦資源：\n\n- 🔗 [LottieFiles 免費動畫素材](https://lottiefiles.com/)\n- 🔧 [LottieLab 線上動畫編輯](https://www.lottielab.com/)\n- 🎨 [Phase 插件（Figma 導出動畫）](https://www.phase.com/zh-TW)\n\n#動畫神器 #Lottie 教學 #Vue 前端開發 #免費動畫 #網頁動效 #原來如此 #發現新大陸 #前端必學工具 #不用 WebGL 也能炫\n\n## 範例專案\n\nhttps://github.com/HarryFan/vue-lottie-ui-starter\n\n## 我是 Harry, 與您分享前端的路上會用到的一些技巧及觀念\n\n<div style="text-align: center;">\n  <img\n    src="/images/harry-fan.webp"\n    alt="Harry Fan"\n    style="max-width: 300px; border-radius: 50%; margin: 0 auto; display: block;"\n  />\n  <p style="font-style: italic; margin-top: 10px;">(手上拿的不是衛生紙，是烤鴨三吃)</p>\n</div>\n\n每個人看事情的觀點及角度、生命歷程都不一樣，一切以你思考過後得到的想法為主。\n\n歡迎之後有其他前端聚會可以邀請我參加，只要我時間允許，歡迎告訴我活動訊息。\n\n我的連絡電子信箱：harry750110@gmail.com Line：harryvan 臉書：Harris Fan\n\n---\n\n> 參考來源：[Lottie 動畫神器](https://uneven-tarantula-5e0.notion.site/1fb48a1740bf80e5995ff4f28d37e0f0)', "src/content/blog/2025-05-28-lottie-animation-tool.md", "f060dd3847209818", { html: 83, metadata: 84 }, '<p>最近在做官網動畫時，無意間發現一個超像發現新大陸的寶藏工具 —— <strong>Lottie</strong>。</p>\n<p>以前一直以為，網頁動畫要不是用 CSS 搞半天，不然就得拜託設計師用 AE 弄影片、轉 MP4、轉 GIF，整個超痛苦又重。</p>\n<p>但這次我真的要說一句：</p>\n<p>👉 <strong>原來 Lottie 不只是給設計師用的，它根本就是動畫界的 CDN 啊！</strong></p>\n<video width="100%" controls>\n  <source src="/videos/螢幕錄影_2025-05-22_上午8.51.25.mov" type="video/mp4">\n  您的瀏覽器不支援 video 標籤。\n</video>\n<hr>\n<h2 id="-原來-lottie-有這些優勢我都不知道">✅ 原來 Lottie 有這些優勢我都不知道：</h2>\n<ol>\n<li>\n<p><strong>有成千上萬個免費動畫可以用</strong></p>\n<p>👉 <a href="https://lottiefiles.com/">LottieFiles</a> 裡面超多開源動畫，品質都很高，幾乎想得到的都有！</p>\n</li>\n<li>\n<p><strong>根本不用會 AE！</strong></p>\n<p>雖然 Lottie 的來源動畫通常是從 After Effects 輸出，但我發現有個工具叫 <a href="https://www.lottielab.com/"><strong>LottieLab</strong></a>，完全可以在瀏覽器編輯動畫、改顏色\n、加互動，而且還可以輸出成 JSON、GIF、MP4！</p>\n</li>\n<li>\n<p><strong>開發端整合爆簡單！</strong></p>\n<p>只要裝一個套件 <code>@lottiefiles/lottie-player</code>，在 Vue、React、甚至原生 HTML 裡都能直接用 Web Component 播放動畫，還能設定 loop、autoplay、speed！</p>\n</li>\n</ol>\n<hr>\n<h2 id="-原本還以為要去學-canvas--webgl">😳 原本還以為要去學 Canvas / WebGL…</h2>\n<p>身為前端我一度以為，要做出炫炮動畫一定得學 canvas 或 WebGL，那種數學一堆又超吃效能的技術。但結果發現：</p>\n<p>👉 <strong>只用 Lottie 生態系，速度快、品質高、動畫檔案還超輕量！</strong></p>\n<p>尤其像下面這些情境，用 Lottie 簡直剛剛好：</p>\n<ul>\n<li>行銷頁面的動畫 banner、CTA 動效</li>\n<li>SaaS 登入頁或 Loading 動畫</li>\n<li>App onboarding 過場動畫</li>\n<li>官網 Hero Section 的視覺吸引動畫</li>\n<li>聯絡表單送出時的小互動動畫</li>\n</ul>\n<p>這些<strong>不需要 3D、即時計算</strong>的動畫類型，用 Lottie 做真的是性價比超高。</p>\n<hr>\n<h2 id="-不同角色的使用組合推薦">🎯 不同角色的使用組合推薦</h2>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>身份</th><th>建議工具組合</th><th>特點</th></tr></thead><tbody><tr><td>前端工程師</td><td><code>lottie-player</code> + LottieFiles</td><td>無腦套用開源動畫，開發效率爆表</td></tr><tr><td>設計師</td><td>AE + Bodymovin / LottieLab</td><td>自己做動畫，完整保有細節與控制權</td></tr><tr><td>UI 設計師（用 Figma）</td><td>Phase + LottieFiles</td><td>用 Figma 動畫轉出，直接傳給開發</td></tr><tr><td>自媒體接案者</td><td>LottieLab + JSON + GIF 輸出</td><td>可以當社群貼圖、Loading 特效，應用很廣</td></tr></tbody></table>\n<hr>\n<h2 id="-那費用呢免費嗎">💰 那費用呢？免費嗎？</h2>\n<ul>\n<li><strong>LottieFiles</strong>：免費瀏覽與下載素材</li>\n<li><strong>LottieLab</strong>：提供免費版，可線上編輯 Lottie 動畫，高階功能如串流、團隊協作需訂閱付費</li>\n<li><strong>Phase（Figma 動畫插件）</strong>：目前基本功能免費</li>\n<li><strong>lottie-player 套件</strong>：完全免費，可直接安裝使用</li>\n</ul>\n<hr>\n<h2 id="-我怎麼用在實戰專案裡">🔧 我怎麼用在實戰專案裡？</h2>\n<p>我現在已經把這整合進我的 Vue 3 專案裡了，還加上了 Tailwind CSS 做 UI，打造一個「<strong>vue-lottie-ui-starter</strong>」樣板專案，只要一行 HTML 就能播放動畫，完全\n無痛整合！</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="html"><code><span class="line"><span style="color:#E1E4E8">&#x3C;</span><span style="color:#85E89D">lottie-player</span><span style="color:#B392F0"> src</span><span style="color:#E1E4E8">=</span><span style="color:#9ECBFF">"https://assets10.lottiefiles.com/packages/lf20_tll0j4bb.json"</span><span style="color:#B392F0"> background</span><span style="color:#E1E4E8">=</span><span style="color:#9ECBFF">"transparent"</span><span style="color:#B392F0"> speed</span><span style="color:#E1E4E8">=</span><span style="color:#9ECBFF">"1"</span><span style="color:#B392F0"> loop</span><span style="color:#B392F0"> autoplay</span><span style="color:#E1E4E8"> /></span></span></code></pre>\n<hr>\n<h2 id="結語拜託早點讓我知道這個啊">結語：拜託早點讓我知道這個啊！</h2>\n<p>Lottie 真的讓我重新認識了「動畫不只是設計師的事」，</p>\n<p>對前端來說，它就像是從 Photoshop 進入到 Canva 的感覺，<strong>門檻降超多，效果卻一樣強大！</strong></p>\n<p>如果你跟我一樣還沒玩過，真的推薦馬上開一個 Lottie 專案來玩玩！</p>\n<hr>\n<p>📌 推薦資源：</p>\n<ul>\n<li>🔗 <a href="https://lottiefiles.com/">LottieFiles 免費動畫素材</a></li>\n<li>🔧 <a href="https://www.lottielab.com/">LottieLab 線上動畫編輯</a></li>\n<li>🎨 <a href="https://www.phase.com/zh-TW">Phase 插件（Figma 導出動畫）</a></li>\n</ul>\n<p>#動畫神器 #Lottie 教學 #Vue 前端開發 #免費動畫 #網頁動效 #原來如此 #發現新大陸 #前端必學工具 #不用 WebGL 也能炫</p>\n<h2 id="範例專案">範例專案</h2>\n<p><a href="https://github.com/HarryFan/vue-lottie-ui-starter">https://github.com/HarryFan/vue-lottie-ui-starter</a></p>\n<h2 id="我是-harry-與您分享前端的路上會用到的一些技巧及觀念">我是 Harry, 與您分享前端的路上會用到的一些技巧及觀念</h2>\n<div style="text-align: center;">\n  <img src="/images/harry-fan.webp" alt="Harry Fan" style="max-width: 300px; border-radius: 50%; margin: 0 auto; display: block;">\n  <p style="font-style: italic; margin-top: 10px;">(手上拿的不是衛生紙，是烤鴨三吃)</p>\n</div>\n<p>每個人看事情的觀點及角度、生命歷程都不一樣，一切以你思考過後得到的想法為主。</p>\n<p>歡迎之後有其他前端聚會可以邀請我參加，只要我時間允許，歡迎告訴我活動訊息。</p>\n<p>我的連絡電子信箱：<a href="mailto:harry750110@gmail.com">harry750110@gmail.com</a> Line：harryvan 臉書：Harris Fan</p>\n<hr>\n<blockquote>\n<p>參考來源：<a href="https://uneven-tarantula-5e0.notion.site/1fb48a1740bf80e5995ff4f28d37e0f0">Lottie 動畫神器</a></p>\n</blockquote>', { headings: 85, localImagePaths: 110, remoteImagePaths: 111, frontmatter: 112, imagePaths: 120 }, [86, 90, 93, 96, 99, 102, 105, 107], { depth: 87, slug: 88, text: 89 }, 2, "-原來-lottie-有這些優勢我都不知道", "✅ 原來 Lottie 有這些優勢我都不知道：", { depth: 87, slug: 91, text: 92 }, "-原本還以為要去學-canvas--webgl", "😳 原本還以為要去學 Canvas / WebGL…", { depth: 87, slug: 94, text: 95 }, "-不同角色的使用組合推薦", "🎯 不同角色的使用組合推薦", { depth: 87, slug: 97, text: 98 }, "-那費用呢免費嗎", "💰 那費用呢？免費嗎？", { depth: 87, slug: 100, text: 101 }, "-我怎麼用在實戰專案裡", "🔧 我怎麼用在實戰專案裡？", { depth: 87, slug: 103, text: 104 }, "結語拜託早點讓我知道這個啊", "結語：拜託早點讓我知道這個啊！", { depth: 87, slug: 106, text: 106 }, "範例專案", { depth: 87, slug: 108, text: 109 }, "我是-harry-與您分享前端的路上會用到的一些技巧及觀念", "我是 Harry, 與您分享前端的路上會用到的一些技巧及觀念", [], [], { title: 75, pubDate: 113, description: 76, tags: 114, heroImage: 78 }, ["Date", "2025-05-28T00:00:00.000Z"], [115, 116, 117, 118, 119], "動畫神器", "Lottie教學", "Vue前端開發", "免費動畫", "網頁動效", [], "2025-06-12-ga4-frontend-optimization", { id: 121, data: 123, body: 128, filePath: 129, digest: 130, rendered: 131 }, { title: 124, description: 125, pubDate: 126, heroImage: 127 }, "🚀 網站最佳化大揭密：GA4資料追蹤與前端效能提升的奇妙旅程", "探索如何透過 GA4 資料追蹤與前端效能優化技術，讓您的網站跑得更快、更聰明，同時提升使用者體驗和轉換率。", ["Date", "2025-06-12T00:00:00.000Z"], "/ga4-frontend-optimization-cover.png", "## 🤔 前言：為什麼我的網站要最佳化？工程師的 OS\n\n哈囉，大家好！身為一個前端工程師，每天除了跟程式碼奮鬥，心裡總有個小劇場：「我做的網站，大家用得順嗎？老闆會滿意嗎？」 你知道嗎？一個網站如果跑得卡卡\n的、找不到重點，使用者可能滑一下就「掰掰」，老闆的摳摳也就跟著「飛走了」。這時候，「資料」和「效能」就像我們的神隊友，能幫我們看清問題，讓網站煥然一新\n！\n\n今天，我想跟大家分享最近我在一個 Vue 3 單頁應用程式 (SPA) 專案中，如何透過 Google Analytics 4 (GA4) 這位資料分析專家，以及一些前端效能最佳化的實用技巧\n，讓網站變得更聰明、更有效率的故事。準備好了嗎？一起來看看這趟探索之旅吧！\n\n## 🕵️‍♂️ 資料偵探辦案中：GA4 如何成為我的神隊友？\n\n以前我們用舊版 GA，就像拿著放大鏡看東西，雖然能看到一些蛛絲馬跡，但總覺得少了點什麼。現在有了 GA4，它更像是一個全方位的偵探，不再只看「有多少人來過」\n，而是更專注在「使用者在網站上做了些什麼」。\n\n### 1. 📊 打造你的專屬「事件」情報網\n\n在 SPA 這種「一頁到底」的網站，使用者點選不同功能時，網址列可能會變，但瀏覽器其實沒有真的「重新整理頁面」。所以，我們得主動告訴 GA4：「嘿！使用者現在\n逛到『商品頁』囉！」、「他剛剛點了『加入購物車』按鈕喔！」\n\n我們寫了一個像這樣的中央情報中心 (`trackEvent` 函數)，之後不管想追蹤什麼千奇百怪的行為，都透過它來回報給 GA4，是不是很有效率？\n\n```javascript\n// 簡單說，就是一個統一的「事件通報中心」函數\nexport const trackEvent = (eventName, eventParams = {}) => {\n  if (typeof window.gtag === 'function') {\n    // 確認 GA4 已經準備就緒\n    window.gtag('event', eventName, {\n      // 發送事件給 GA4\n      ...eventParams, // 其他補充資訊，例如：商品名稱、價格等等\n      send_to: window.gaId, // 確保情報送到正確的 GA4 基地\n      debug_mode: !import.meta.env.PROD, // 開發模式下，可以看到更詳細的追蹤資訊\n    });\n  }\n};\n```\n\n### 2. 👥 描繪使用者輪廓：自訂你想看的資料維度\n\n光知道使用者點了什麼還不夠，我們想更深入了解「哪些人」在「做哪些事」。GA4 的「自訂維度與指標」就像給了我們很多空白標籤，可以自己定義想看的資訊，例如：\n\n- **使用者足跡地圖**：追蹤使用者是從哪個廣告點進來的，逛了哪些頁面，最後有沒有買單。\n- **購物轉換漏斗分析**：有多少人看了商品？多少人放進購物車？又有多少人成功結帳？找出哪個步驟客人流失最多。\n- **VIP 客戶雷達**：找出那些經常光顧、消費力強的忠實客戶，針對他們做更精準的行銷活動。\n\n### 3. 💰 讓廣告預算花在刀口上：整合 Google Ads 轉換追蹤\n\n如果公司有在 Google 投放廣告，那每一塊錢都希望能帶來實際效益。我們把 GA4 跟 Google Ads 串接起來，這樣就能一清二楚地知道，哪個廣告真的有帶來客人，哪些\n只是在浪費預算。\n\n```javascript\n// 通知 Google Ads：「報告！有人買東西了，這是你廣告的功勞喔！」\nexport const trackConversion = (conversionType, additionalData = {}) => {\n  if (typeof window.gtag !== 'function') return; // GA4 罷工中，稍後再試\n\n  // 先設定好不同的「轉換事件」代碼，例如「完成購買」是一個代碼，「註冊會員」又是另一個\n  const conversionEvents = {\n    purchase: 'AW-123456789/AbC-D_EFGHiJKL-MnOpqRstUv', // 完成購買的識別碼\n    signup: 'AW-123456789/XyZ-123456', // 註冊會員的識別碼\n  };\n\n  if (conversionEvents[conversionType]) {\n    // 如果是我們定義好的重要轉換行為\n    window.gtag('event', 'conversion', {\n      // 就發送一個「轉換」事件\n      send_to: conversionEvents[conversionType], // 告訴 Google Ads 這是哪個轉換事件\n      value: additionalData.value || 0, // 這次轉換的價值（例如：訂單金額）\n      currency: additionalData.currency || 'TWD', // 使用的幣別\n      transaction_id: additionalData.transactionId || '', // 訂單編號，避免重複計算轉換\n    });\n  }\n};\n```\n\n## 🚀 網站加速三部曲：讓你的網站「飛」起來！\n\n資料分析幫我們找出問題點，但如果網站慢得像烏龜，使用者根本沒耐心體驗我們精心設計的功能。所以，接下來就是前端工程師的拿手好戲——網站加速！\n\n### 1️⃣ 第一步：程式碼「化整為零」，需要時才呼叫\n\n想像一下，你走進一家大賣場，總不希望一進門，所有貨架上的商品都瞬間堆到你面前吧？網站也是一樣的道理。使用者可能一開始只需要看首頁，我們就先把首頁的程式\n碼給他；等他想看商品頁的時候，再把商品頁的程式碼送過去。這就是所謂的「程式碼分割」(Code Splitting) 和「懶載入」(Lazy Loading)。\n\n在 Vue 3，我們可以這樣實作：\n\n```javascript\n// 路由設定檔，規劃網站的交通動線，哪個網址對應到哪個頁面\nconst routes = [\n  {\n    path: '/product/:id', // 例如：商品詳細頁的路徑\n    // 當使用者點到這個路徑時，才去下載 ProductDetail.vue 這個頁面的程式碼\n    component: () => import('@/views/ProductDetail.vue'),\n    meta: { preload: true }, // 小技巧：如果是非常重要的頁面，可以考慮讓瀏覽器偷偷先下載一部分\n  },\n  {\n    path: '/about', // 例如：「關於我們」頁面的路徑\n    // webpackChunkName 可以幫打包後的程式碼檔案取個容易辨識的名字，方便管理\n    component: () => import(/* webpackChunkName: \"about\" */ '@/views/AboutView.vue'),\n  },\n];\n```\n\n### 2️⃣ 第二步：圖片「瘦身」大作戰，美觀又不佔頻寬\n\n吸睛的圖片很重要，但過大的圖片檔案卻是拖慢網站速度的頭號戰犯之一。我們的圖片最佳化策略包含：\n\n1.  **量身打造，提供最適尺寸**：手機用戶就給他手機版的小圖，電腦螢幕大的用戶才給高解析大圖。用 `<picture>` 標籤和 `srcset` 屬性就能輕鬆搞定。\n2.  **滑到再載入，節省用戶流量**：使用者還沒看到的圖片，先不用急著下載。等他快滑到圖片位置時，再悄悄載入，這就是「圖片懶載入」。\n3.  **自動壓縮，精簡檔案大小**：在網站上線前，透過工具自動幫圖片「減肥」，去掉不必要的資訊，讓檔案變得更小巧。\n\n```html\n<!-- 範例：一張圖片，多種尺寸，還會自動懶載入 -->\n<picture>\n  <!-- 當螢幕寬度大於 1024px 時，優先使用這張大尺寸圖片 -->\n  <source media=\"(min-width: 1024px)\" srcset=\"/images/hero-large.jpg 1x, /images/hero-large@2x.jpg 2x\" />\n  <!-- 當螢幕寬度大於 640px 時，優先使用這張中尺寸圖片 -->\n  <source media=\"(min-width: 640px)\" srcset=\"/images/hero-medium.jpg 1x, /images/hero-medium@2x.jpg 2x\" />\n  <!-- 其他情況或手機上，就用這張小尺寸圖片 -->\n  <img src=\"/images/hero-small.jpg\" srcset=\"/images/hero-small.jpg 1x, /images/hero-small@2x.jpg 2x\" alt=\"一張非常重要的形象圖\" loading=\"lazy\" />\n  <!-- 加上這個屬性，瀏覽器就會自動幫我們做圖片懶載入 -->\n</picture>\n```\n\n### 3️⃣ 第三步：網站「健康檢查」不可少，時刻監控核心效能指標\n\n最佳化不是一次性的任務，我們還需要持續監控網站的「健康狀況」。Google 提出了一些「網站核心體驗指標」(Core Web Vitals)，像是網站主要內容的載入速度\n(LCP)、使用者首次互動的延遲時間 (FID)、頁面視覺的穩定性 (CLS) 等。我們把這些指標也納入 GA4 的追蹤範圍，隨時掌握網站的表現是不是在最佳狀態。\n\n```javascript\n// 監控網站的「健康指數」\nexport const trackWebVitals = () => {\n  if (typeof window.gtag !== 'function') return; // GA4 沒啟動，今天休息\n\n  // 一個小幫手函數，幫我們把監測到的資料回報給 GA4\n  const trackMetric = (name, value, id) => {\n    window.gtag('event', name, {\n      // 事件名稱直接用指標的名稱，例如 LCP、FID\n      event_category: 'Web Vitals', // 在 GA4 裡做個分類，方便查看報告\n      value: Math.round(name === 'CLS' ? value * 1000 : value), // 把數值稍微處理一下，方便閱讀\n      event_label: id, // 每個指標都會有一個獨特的 ID\n      non_interaction: true, // 告訴 GA4 這不是使用者主動的互動，不要影響跳出率等資料的計算\n    });\n  };\n\n  // 使用 web-vitals 這個好用的函式庫來幫我們收集這些效能資料\n  webVitals({\n    getCLS: trackMetric.bind(null, 'CLS'),\n    getFID: trackMetric.bind(null, 'FID'),\n    getLCP: trackMetric.bind(null, 'LCP'),\n    getFCP: trackMetric.bind(null, 'FCP'), // First Contentful Paint，使用者看到第一個內容出現的時間\n    getTTFB: trackMetric.bind(null, 'TTFB'), // Time to First Byte，瀏覽器收到伺服器第一個位元組的時間\n  });\n};\n```\n\n## 🌟 讓 Google 愛上我：SEO 最佳化實戰分享\n\n網站做得再棒，如果 Google 大神找不到，那也是英雄無用武之地。所以，SEO (搜尋引擎最佳化) 也是我們努力的重點項目。\n\n### 1. 📝 讓每個頁面都有專屬「識別證」：動態 Meta Tags\n\nSPA 網站常常所有頁面都共用同一個 HTML 骨架，這樣 Google 可能會「霧煞煞」，搞不清楚每個頁面的主題是什麼。我們利用 Vue Router 的「導航守衛」這個酷功能，\n在每次切換頁面時，動態更新頁面的標題 (`<title>`) 和網頁描述 (`<meta name=\"description\">`) 等重要資訊，就像幫每個頁面都準備一張獨一無二的「數位識別證」\n。\n\n### 常見迷思：CSR 應用程式也能做好 SEO！\n\n過去很多人以為只有 SSR (Server-Side Rendering) 才能做好 SEO，但這次專案經驗證明，現代的 CSR (Client-Side Rendering) 應用程式也能輕鬆應對搜尋引擎優化。\n特別是 Vite + Vue3 的組合，提供了極佳的開發體驗和效能表現，讓我們能輕鬆實現動態 Meta Tags、預渲染等 SEO 最佳實踐。\n\n```javascript\n// 在 Vue Router 每次完成換頁動作後，執行一些事情\nrouter.afterEach(to => {\n  // 拿到新頁面預先設定好的標題，如果沒有就給它一個預設標題\n  const title = to.meta.title || '這是我的網站預設標題';\n  document.title = `${title} | 我的網站名稱`; // 更新瀏覽器頁籤上顯示的標題\n\n  // 同樣的道理，更新其他重要的 meta 標籤，例如網頁描述、分享到社群媒體時的預覽圖、標準網址等\n  updateMetaTags({\n    title: title,\n    description: to.meta.description || '這是我的網站預設描述',\n    image: to.meta.image || '/default-og-image.jpg', // 設定分享時的預覽圖片\n    url: window.location.href, // 設定標準的頁面網址\n  });\n});\n```\n\n### 2. 🚀 為 Google 搜尋引擎開「快速通道」：預渲染關鍵頁面\n\n雖然 Google 搜尋引擎越來越厲害，看得懂 JavaScript 動態產生的內容，但有時候還是主動幫它一把比較穩當。對於那些我們希望在搜尋結果中能有亮眼表現的「重點頁\n面」(例如首頁、產品列表頁)，我們可以使用「預渲染」(Prerendering) 技術。簡單來說，就是在網站打包上線前，先把這些頁面「預先畫好」變成靜態的 HTML 檔案，\n這樣 Google 爬蟲一來就能馬上看懂頁面內容，不用辛苦地等 JavaScript 執行完畢。\n\n```javascript\n// vite.config.js (如果是使用 Vite 作為建置工具的專案設定檔)\nexport default {\n  plugins: [\n    vue(),\n    // PrerenderSPAPlugin 這個好用的工具可以幫我們完成預渲染的工作\n    PrerenderSPAPlugin({\n      staticDir: path.join(__dirname, 'dist'), // 告訴它打包後的檔案會放在哪個資料夾\n      routes: ['/', '/about', '/products', '/contact'], // 指定哪些路徑的頁面需要被預渲染\n      renderer: new PrerenderSPAPlugin.PuppeteerRenderer({\n        // 設定在頁面觸發一個叫做 'render-event' 的事件之後才開始進行渲染\n        // 這樣可以確保頁面上的動態內容都已經載入完成\n        renderAfterDocumentEvent: 'render-event',\n      }),\n    }),\n  ],\n};\n```\n\n## 🎯 後記：專業成長與未來展望\n\n這次專案讓我對現代網頁開發有了更深入的認識，特別是在 GA4 資料分析與前端效能優化的實務應用上。透過這次經驗，我不僅累積了寶貴的技術資產，也磨練了問題解\n決與團隊協作的能力。\n\n在技術快速演進的今天，持續學習與自我提升是工程師不可或缺的素養。我期待能將這些經驗應用於未來的專案中，並持續探索更多創新的技術解決方案。\n\n如果您對這個專案有任何想法或合作機會，歡迎隨時與我聯繫。感謝您的閱讀！\n\n---\n\n<div style=\"text-align: center;\">\n  <img\n    src=\"/images/harry-fan.webp\"\n    alt=\"Harry Fan\"\n    style=\"max-width: 300px; border-radius: 50%; margin: 0 auto; display: block;\"\n  />\n  <h3>Harry Fan</h3>\n  <p>前端工程師 | 網站效能優化愛好者</p>\n  <p>熱愛探索新技術，專注於打造流暢的使用者體驗</p>\n</div>", "src/content/blog/2025-06-12-ga4-frontend-optimization.md", "16fa7261fc6a191d", { html: 132, metadata: 133 }, `<h2 id="-前言為什麼我的網站要最佳化工程師的-os">🤔 前言：為什麼我的網站要最佳化？工程師的 OS</h2>
<p>哈囉，大家好！身為一個前端工程師，每天除了跟程式碼奮鬥，心裡總有個小劇場：「我做的網站，大家用得順嗎？老闆會滿意嗎？」 你知道嗎？一個網站如果跑得卡卡
的、找不到重點，使用者可能滑一下就「掰掰」，老闆的摳摳也就跟著「飛走了」。這時候，「資料」和「效能」就像我們的神隊友，能幫我們看清問題，讓網站煥然一新
！</p>
<p>今天，我想跟大家分享最近我在一個 Vue 3 單頁應用程式 (SPA) 專案中，如何透過 Google Analytics 4 (GA4) 這位資料分析專家，以及一些前端效能最佳化的實用技巧
，讓網站變得更聰明、更有效率的故事。準備好了嗎？一起來看看這趟探索之旅吧！</p>
<h2 id="️️-資料偵探辦案中ga4-如何成為我的神隊友">🕵️‍♂️ 資料偵探辦案中：GA4 如何成為我的神隊友？</h2>
<p>以前我們用舊版 GA，就像拿著放大鏡看東西，雖然能看到一些蛛絲馬跡，但總覺得少了點什麼。現在有了 GA4，它更像是一個全方位的偵探，不再只看「有多少人來過」
，而是更專注在「使用者在網站上做了些什麼」。</p>
<h3 id="1--打造你的專屬事件情報網">1. 📊 打造你的專屬「事件」情報網</h3>
<p>在 SPA 這種「一頁到底」的網站，使用者點選不同功能時，網址列可能會變，但瀏覽器其實沒有真的「重新整理頁面」。所以，我們得主動告訴 GA4：「嘿！使用者現在
逛到『商品頁』囉！」、「他剛剛點了『加入購物車』按鈕喔！」</p>
<p>我們寫了一個像這樣的中央情報中心 (<code>trackEvent</code> 函數)，之後不管想追蹤什麼千奇百怪的行為，都透過它來回報給 GA4，是不是很有效率？</p>
<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="javascript"><code><span class="line"><span style="color:#6A737D">// 簡單說，就是一個統一的「事件通報中心」函數</span></span>
<span class="line"><span style="color:#F97583">export</span><span style="color:#F97583"> const</span><span style="color:#B392F0"> trackEvent</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> (</span><span style="color:#FFAB70">eventName</span><span style="color:#E1E4E8">, </span><span style="color:#FFAB70">eventParams</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> {}) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> {</span></span>
<span class="line"><span style="color:#F97583">  if</span><span style="color:#E1E4E8"> (</span><span style="color:#F97583">typeof</span><span style="color:#E1E4E8"> window.gtag </span><span style="color:#F97583">===</span><span style="color:#9ECBFF"> 'function'</span><span style="color:#E1E4E8">) {</span></span>
<span class="line"><span style="color:#6A737D">    // 確認 GA4 已經準備就緒</span></span>
<span class="line"><span style="color:#E1E4E8">    window.</span><span style="color:#B392F0">gtag</span><span style="color:#E1E4E8">(</span><span style="color:#9ECBFF">'event'</span><span style="color:#E1E4E8">, eventName, {</span></span>
<span class="line"><span style="color:#6A737D">      // 發送事件給 GA4</span></span>
<span class="line"><span style="color:#F97583">      ...</span><span style="color:#E1E4E8">eventParams, </span><span style="color:#6A737D">// 其他補充資訊，例如：商品名稱、價格等等</span></span>
<span class="line"><span style="color:#E1E4E8">      send_to: window.gaId, </span><span style="color:#6A737D">// 確保情報送到正確的 GA4 基地</span></span>
<span class="line"><span style="color:#E1E4E8">      debug_mode: </span><span style="color:#F97583">!import</span><span style="color:#E1E4E8">.</span><span style="color:#79B8FF">meta</span><span style="color:#E1E4E8">.env.</span><span style="color:#79B8FF">PROD</span><span style="color:#E1E4E8">, </span><span style="color:#6A737D">// 開發模式下，可以看到更詳細的追蹤資訊</span></span>
<span class="line"><span style="color:#E1E4E8">    });</span></span>
<span class="line"><span style="color:#E1E4E8">  }</span></span>
<span class="line"><span style="color:#E1E4E8">};</span></span></code></pre>
<h3 id="2--描繪使用者輪廓自訂你想看的資料維度">2. 👥 描繪使用者輪廓：自訂你想看的資料維度</h3>
<p>光知道使用者點了什麼還不夠，我們想更深入了解「哪些人」在「做哪些事」。GA4 的「自訂維度與指標」就像給了我們很多空白標籤，可以自己定義想看的資訊，例如：</p>
<ul>
<li><strong>使用者足跡地圖</strong>：追蹤使用者是從哪個廣告點進來的，逛了哪些頁面，最後有沒有買單。</li>
<li><strong>購物轉換漏斗分析</strong>：有多少人看了商品？多少人放進購物車？又有多少人成功結帳？找出哪個步驟客人流失最多。</li>
<li><strong>VIP 客戶雷達</strong>：找出那些經常光顧、消費力強的忠實客戶，針對他們做更精準的行銷活動。</li>
</ul>
<h3 id="3--讓廣告預算花在刀口上整合-google-ads-轉換追蹤">3. 💰 讓廣告預算花在刀口上：整合 Google Ads 轉換追蹤</h3>
<p>如果公司有在 Google 投放廣告，那每一塊錢都希望能帶來實際效益。我們把 GA4 跟 Google Ads 串接起來，這樣就能一清二楚地知道，哪個廣告真的有帶來客人，哪些
只是在浪費預算。</p>
<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="javascript"><code><span class="line"><span style="color:#6A737D">// 通知 Google Ads：「報告！有人買東西了，這是你廣告的功勞喔！」</span></span>
<span class="line"><span style="color:#F97583">export</span><span style="color:#F97583"> const</span><span style="color:#B392F0"> trackConversion</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> (</span><span style="color:#FFAB70">conversionType</span><span style="color:#E1E4E8">, </span><span style="color:#FFAB70">additionalData</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> {}) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> {</span></span>
<span class="line"><span style="color:#F97583">  if</span><span style="color:#E1E4E8"> (</span><span style="color:#F97583">typeof</span><span style="color:#E1E4E8"> window.gtag </span><span style="color:#F97583">!==</span><span style="color:#9ECBFF"> 'function'</span><span style="color:#E1E4E8">) </span><span style="color:#F97583">return</span><span style="color:#E1E4E8">; </span><span style="color:#6A737D">// GA4 罷工中，稍後再試</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D">  // 先設定好不同的「轉換事件」代碼，例如「完成購買」是一個代碼，「註冊會員」又是另一個</span></span>
<span class="line"><span style="color:#F97583">  const</span><span style="color:#79B8FF"> conversionEvents</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> {</span></span>
<span class="line"><span style="color:#E1E4E8">    purchase: </span><span style="color:#9ECBFF">'AW-123456789/AbC-D_EFGHiJKL-MnOpqRstUv'</span><span style="color:#E1E4E8">, </span><span style="color:#6A737D">// 完成購買的識別碼</span></span>
<span class="line"><span style="color:#E1E4E8">    signup: </span><span style="color:#9ECBFF">'AW-123456789/XyZ-123456'</span><span style="color:#E1E4E8">, </span><span style="color:#6A737D">// 註冊會員的識別碼</span></span>
<span class="line"><span style="color:#E1E4E8">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583">  if</span><span style="color:#E1E4E8"> (conversionEvents[conversionType]) {</span></span>
<span class="line"><span style="color:#6A737D">    // 如果是我們定義好的重要轉換行為</span></span>
<span class="line"><span style="color:#E1E4E8">    window.</span><span style="color:#B392F0">gtag</span><span style="color:#E1E4E8">(</span><span style="color:#9ECBFF">'event'</span><span style="color:#E1E4E8">, </span><span style="color:#9ECBFF">'conversion'</span><span style="color:#E1E4E8">, {</span></span>
<span class="line"><span style="color:#6A737D">      // 就發送一個「轉換」事件</span></span>
<span class="line"><span style="color:#E1E4E8">      send_to: conversionEvents[conversionType], </span><span style="color:#6A737D">// 告訴 Google Ads 這是哪個轉換事件</span></span>
<span class="line"><span style="color:#E1E4E8">      value: additionalData.value </span><span style="color:#F97583">||</span><span style="color:#79B8FF"> 0</span><span style="color:#E1E4E8">, </span><span style="color:#6A737D">// 這次轉換的價值（例如：訂單金額）</span></span>
<span class="line"><span style="color:#E1E4E8">      currency: additionalData.currency </span><span style="color:#F97583">||</span><span style="color:#9ECBFF"> 'TWD'</span><span style="color:#E1E4E8">, </span><span style="color:#6A737D">// 使用的幣別</span></span>
<span class="line"><span style="color:#E1E4E8">      transaction_id: additionalData.transactionId </span><span style="color:#F97583">||</span><span style="color:#9ECBFF"> ''</span><span style="color:#E1E4E8">, </span><span style="color:#6A737D">// 訂單編號，避免重複計算轉換</span></span>
<span class="line"><span style="color:#E1E4E8">    });</span></span>
<span class="line"><span style="color:#E1E4E8">  }</span></span>
<span class="line"><span style="color:#E1E4E8">};</span></span></code></pre>
<h2 id="-網站加速三部曲讓你的網站飛起來">🚀 網站加速三部曲：讓你的網站「飛」起來！</h2>
<p>資料分析幫我們找出問題點，但如果網站慢得像烏龜，使用者根本沒耐心體驗我們精心設計的功能。所以，接下來就是前端工程師的拿手好戲——網站加速！</p>
<h3 id="1️⃣-第一步程式碼化整為零需要時才呼叫">1️⃣ 第一步：程式碼「化整為零」，需要時才呼叫</h3>
<p>想像一下，你走進一家大賣場，總不希望一進門，所有貨架上的商品都瞬間堆到你面前吧？網站也是一樣的道理。使用者可能一開始只需要看首頁，我們就先把首頁的程式
碼給他；等他想看商品頁的時候，再把商品頁的程式碼送過去。這就是所謂的「程式碼分割」(Code Splitting) 和「懶載入」(Lazy Loading)。</p>
<p>在 Vue 3，我們可以這樣實作：</p>
<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="javascript"><code><span class="line"><span style="color:#6A737D">// 路由設定檔，規劃網站的交通動線，哪個網址對應到哪個頁面</span></span>
<span class="line"><span style="color:#F97583">const</span><span style="color:#79B8FF"> routes</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> [</span></span>
<span class="line"><span style="color:#E1E4E8">  {</span></span>
<span class="line"><span style="color:#E1E4E8">    path: </span><span style="color:#9ECBFF">'/product/:id'</span><span style="color:#E1E4E8">, </span><span style="color:#6A737D">// 例如：商品詳細頁的路徑</span></span>
<span class="line"><span style="color:#6A737D">    // 當使用者點到這個路徑時，才去下載 ProductDetail.vue 這個頁面的程式碼</span></span>
<span class="line"><span style="color:#B392F0">    component</span><span style="color:#E1E4E8">: () </span><span style="color:#F97583">=></span><span style="color:#F97583"> import</span><span style="color:#E1E4E8">(</span><span style="color:#9ECBFF">'@/views/ProductDetail.vue'</span><span style="color:#E1E4E8">),</span></span>
<span class="line"><span style="color:#E1E4E8">    meta: { preload: </span><span style="color:#79B8FF">true</span><span style="color:#E1E4E8"> }, </span><span style="color:#6A737D">// 小技巧：如果是非常重要的頁面，可以考慮讓瀏覽器偷偷先下載一部分</span></span>
<span class="line"><span style="color:#E1E4E8">  },</span></span>
<span class="line"><span style="color:#E1E4E8">  {</span></span>
<span class="line"><span style="color:#E1E4E8">    path: </span><span style="color:#9ECBFF">'/about'</span><span style="color:#E1E4E8">, </span><span style="color:#6A737D">// 例如：「關於我們」頁面的路徑</span></span>
<span class="line"><span style="color:#6A737D">    // webpackChunkName 可以幫打包後的程式碼檔案取個容易辨識的名字，方便管理</span></span>
<span class="line"><span style="color:#B392F0">    component</span><span style="color:#E1E4E8">: () </span><span style="color:#F97583">=></span><span style="color:#B392F0"> import</span><span style="color:#E1E4E8">(</span><span style="color:#6A737D">/* webpackChunkName: "about" */</span><span style="color:#9ECBFF"> '@/views/AboutView.vue'</span><span style="color:#E1E4E8">),</span></span>
<span class="line"><span style="color:#E1E4E8">  },</span></span>
<span class="line"><span style="color:#E1E4E8">];</span></span></code></pre>
<h3 id="2️⃣-第二步圖片瘦身大作戰美觀又不佔頻寬">2️⃣ 第二步：圖片「瘦身」大作戰，美觀又不佔頻寬</h3>
<p>吸睛的圖片很重要，但過大的圖片檔案卻是拖慢網站速度的頭號戰犯之一。我們的圖片最佳化策略包含：</p>
<ol>
<li><strong>量身打造，提供最適尺寸</strong>：手機用戶就給他手機版的小圖，電腦螢幕大的用戶才給高解析大圖。用 <code>&#x3C;picture></code> 標籤和 <code>srcset</code> 屬性就能輕鬆搞定。</li>
<li><strong>滑到再載入，節省用戶流量</strong>：使用者還沒看到的圖片，先不用急著下載。等他快滑到圖片位置時，再悄悄載入，這就是「圖片懶載入」。</li>
<li><strong>自動壓縮，精簡檔案大小</strong>：在網站上線前，透過工具自動幫圖片「減肥」，去掉不必要的資訊，讓檔案變得更小巧。</li>
</ol>
<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="html"><code><span class="line"><span style="color:#6A737D">&#x3C;!-- 範例：一張圖片，多種尺寸，還會自動懶載入 --></span></span>
<span class="line"><span style="color:#E1E4E8">&#x3C;</span><span style="color:#85E89D">picture</span><span style="color:#E1E4E8">></span></span>
<span class="line"><span style="color:#6A737D">  &#x3C;!-- 當螢幕寬度大於 1024px 時，優先使用這張大尺寸圖片 --></span></span>
<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">source</span><span style="color:#B392F0"> media</span><span style="color:#E1E4E8">=</span><span style="color:#9ECBFF">"(min-width: 1024px)"</span><span style="color:#B392F0"> srcset</span><span style="color:#E1E4E8">=</span><span style="color:#9ECBFF">"/images/hero-large.jpg 1x, /images/hero-large@2x.jpg 2x"</span><span style="color:#E1E4E8"> /></span></span>
<span class="line"><span style="color:#6A737D">  &#x3C;!-- 當螢幕寬度大於 640px 時，優先使用這張中尺寸圖片 --></span></span>
<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">source</span><span style="color:#B392F0"> media</span><span style="color:#E1E4E8">=</span><span style="color:#9ECBFF">"(min-width: 640px)"</span><span style="color:#B392F0"> srcset</span><span style="color:#E1E4E8">=</span><span style="color:#9ECBFF">"/images/hero-medium.jpg 1x, /images/hero-medium@2x.jpg 2x"</span><span style="color:#E1E4E8"> /></span></span>
<span class="line"><span style="color:#6A737D">  &#x3C;!-- 其他情況或手機上，就用這張小尺寸圖片 --></span></span>
<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">img</span><span style="color:#B392F0"> src</span><span style="color:#E1E4E8">=</span><span style="color:#9ECBFF">"/images/hero-small.jpg"</span><span style="color:#B392F0"> srcset</span><span style="color:#E1E4E8">=</span><span style="color:#9ECBFF">"/images/hero-small.jpg 1x, /images/hero-small@2x.jpg 2x"</span><span style="color:#B392F0"> alt</span><span style="color:#E1E4E8">=</span><span style="color:#9ECBFF">"一張非常重要的形象圖"</span><span style="color:#B392F0"> loading</span><span style="color:#E1E4E8">=</span><span style="color:#9ECBFF">"lazy"</span><span style="color:#E1E4E8"> /></span></span>
<span class="line"><span style="color:#6A737D">  &#x3C;!-- 加上這個屬性，瀏覽器就會自動幫我們做圖片懶載入 --></span></span>
<span class="line"><span style="color:#E1E4E8">&#x3C;/</span><span style="color:#85E89D">picture</span><span style="color:#E1E4E8">></span></span></code></pre>
<h3 id="3️⃣-第三步網站健康檢查不可少時刻監控核心效能指標">3️⃣ 第三步：網站「健康檢查」不可少，時刻監控核心效能指標</h3>
<p>最佳化不是一次性的任務，我們還需要持續監控網站的「健康狀況」。Google 提出了一些「網站核心體驗指標」(Core Web Vitals)，像是網站主要內容的載入速度
(LCP)、使用者首次互動的延遲時間 (FID)、頁面視覺的穩定性 (CLS) 等。我們把這些指標也納入 GA4 的追蹤範圍，隨時掌握網站的表現是不是在最佳狀態。</p>
<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="javascript"><code><span class="line"><span style="color:#6A737D">// 監控網站的「健康指數」</span></span>
<span class="line"><span style="color:#F97583">export</span><span style="color:#F97583"> const</span><span style="color:#B392F0"> trackWebVitals</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> () </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> {</span></span>
<span class="line"><span style="color:#F97583">  if</span><span style="color:#E1E4E8"> (</span><span style="color:#F97583">typeof</span><span style="color:#E1E4E8"> window.gtag </span><span style="color:#F97583">!==</span><span style="color:#9ECBFF"> 'function'</span><span style="color:#E1E4E8">) </span><span style="color:#F97583">return</span><span style="color:#E1E4E8">; </span><span style="color:#6A737D">// GA4 沒啟動，今天休息</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D">  // 一個小幫手函數，幫我們把監測到的資料回報給 GA4</span></span>
<span class="line"><span style="color:#F97583">  const</span><span style="color:#B392F0"> trackMetric</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> (</span><span style="color:#FFAB70">name</span><span style="color:#E1E4E8">, </span><span style="color:#FFAB70">value</span><span style="color:#E1E4E8">, </span><span style="color:#FFAB70">id</span><span style="color:#E1E4E8">) </span><span style="color:#F97583">=></span><span style="color:#E1E4E8"> {</span></span>
<span class="line"><span style="color:#E1E4E8">    window.</span><span style="color:#B392F0">gtag</span><span style="color:#E1E4E8">(</span><span style="color:#9ECBFF">'event'</span><span style="color:#E1E4E8">, name, {</span></span>
<span class="line"><span style="color:#6A737D">      // 事件名稱直接用指標的名稱，例如 LCP、FID</span></span>
<span class="line"><span style="color:#E1E4E8">      event_category: </span><span style="color:#9ECBFF">'Web Vitals'</span><span style="color:#E1E4E8">, </span><span style="color:#6A737D">// 在 GA4 裡做個分類，方便查看報告</span></span>
<span class="line"><span style="color:#E1E4E8">      value: Math.</span><span style="color:#B392F0">round</span><span style="color:#E1E4E8">(name </span><span style="color:#F97583">===</span><span style="color:#9ECBFF"> 'CLS'</span><span style="color:#F97583"> ?</span><span style="color:#E1E4E8"> value </span><span style="color:#F97583">*</span><span style="color:#79B8FF"> 1000</span><span style="color:#F97583"> :</span><span style="color:#E1E4E8"> value), </span><span style="color:#6A737D">// 把數值稍微處理一下，方便閱讀</span></span>
<span class="line"><span style="color:#E1E4E8">      event_label: id, </span><span style="color:#6A737D">// 每個指標都會有一個獨特的 ID</span></span>
<span class="line"><span style="color:#E1E4E8">      non_interaction: </span><span style="color:#79B8FF">true</span><span style="color:#E1E4E8">, </span><span style="color:#6A737D">// 告訴 GA4 這不是使用者主動的互動，不要影響跳出率等資料的計算</span></span>
<span class="line"><span style="color:#E1E4E8">    });</span></span>
<span class="line"><span style="color:#E1E4E8">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D">  // 使用 web-vitals 這個好用的函式庫來幫我們收集這些效能資料</span></span>
<span class="line"><span style="color:#B392F0">  webVitals</span><span style="color:#E1E4E8">({</span></span>
<span class="line"><span style="color:#E1E4E8">    getCLS: trackMetric.</span><span style="color:#B392F0">bind</span><span style="color:#E1E4E8">(</span><span style="color:#79B8FF">null</span><span style="color:#E1E4E8">, </span><span style="color:#9ECBFF">'CLS'</span><span style="color:#E1E4E8">),</span></span>
<span class="line"><span style="color:#E1E4E8">    getFID: trackMetric.</span><span style="color:#B392F0">bind</span><span style="color:#E1E4E8">(</span><span style="color:#79B8FF">null</span><span style="color:#E1E4E8">, </span><span style="color:#9ECBFF">'FID'</span><span style="color:#E1E4E8">),</span></span>
<span class="line"><span style="color:#E1E4E8">    getLCP: trackMetric.</span><span style="color:#B392F0">bind</span><span style="color:#E1E4E8">(</span><span style="color:#79B8FF">null</span><span style="color:#E1E4E8">, </span><span style="color:#9ECBFF">'LCP'</span><span style="color:#E1E4E8">),</span></span>
<span class="line"><span style="color:#E1E4E8">    getFCP: trackMetric.</span><span style="color:#B392F0">bind</span><span style="color:#E1E4E8">(</span><span style="color:#79B8FF">null</span><span style="color:#E1E4E8">, </span><span style="color:#9ECBFF">'FCP'</span><span style="color:#E1E4E8">), </span><span style="color:#6A737D">// First Contentful Paint，使用者看到第一個內容出現的時間</span></span>
<span class="line"><span style="color:#E1E4E8">    getTTFB: trackMetric.</span><span style="color:#B392F0">bind</span><span style="color:#E1E4E8">(</span><span style="color:#79B8FF">null</span><span style="color:#E1E4E8">, </span><span style="color:#9ECBFF">'TTFB'</span><span style="color:#E1E4E8">), </span><span style="color:#6A737D">// Time to First Byte，瀏覽器收到伺服器第一個位元組的時間</span></span>
<span class="line"><span style="color:#E1E4E8">  });</span></span>
<span class="line"><span style="color:#E1E4E8">};</span></span></code></pre>
<h2 id="-讓-google-愛上我seo-最佳化實戰分享">🌟 讓 Google 愛上我：SEO 最佳化實戰分享</h2>
<p>網站做得再棒，如果 Google 大神找不到，那也是英雄無用武之地。所以，SEO (搜尋引擎最佳化) 也是我們努力的重點項目。</p>
<h3 id="1--讓每個頁面都有專屬識別證動態-meta-tags">1. 📝 讓每個頁面都有專屬「識別證」：動態 Meta Tags</h3>
<p>SPA 網站常常所有頁面都共用同一個 HTML 骨架，這樣 Google 可能會「霧煞煞」，搞不清楚每個頁面的主題是什麼。我們利用 Vue Router 的「導航守衛」這個酷功能，
在每次切換頁面時，動態更新頁面的標題 (<code>&#x3C;title></code>) 和網頁描述 (<code>&#x3C;meta name="description"></code>) 等重要資訊，就像幫每個頁面都準備一張獨一無二的「數位識別證」
。</p>
<h3 id="常見迷思csr-應用程式也能做好-seo">常見迷思：CSR 應用程式也能做好 SEO！</h3>
<p>過去很多人以為只有 SSR (Server-Side Rendering) 才能做好 SEO，但這次專案經驗證明，現代的 CSR (Client-Side Rendering) 應用程式也能輕鬆應對搜尋引擎優化。
特別是 Vite + Vue3 的組合，提供了極佳的開發體驗和效能表現，讓我們能輕鬆實現動態 Meta Tags、預渲染等 SEO 最佳實踐。</p>
<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="javascript"><code><span class="line"><span style="color:#6A737D">// 在 Vue Router 每次完成換頁動作後，執行一些事情</span></span>
<span class="line"><span style="color:#E1E4E8">router.</span><span style="color:#B392F0">afterEach</span><span style="color:#E1E4E8">(</span><span style="color:#FFAB70">to</span><span style="color:#F97583"> =></span><span style="color:#E1E4E8"> {</span></span>
<span class="line"><span style="color:#6A737D">  // 拿到新頁面預先設定好的標題，如果沒有就給它一個預設標題</span></span>
<span class="line"><span style="color:#F97583">  const</span><span style="color:#79B8FF"> title</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> to.meta.title </span><span style="color:#F97583">||</span><span style="color:#9ECBFF"> '這是我的網站預設標題'</span><span style="color:#E1E4E8">;</span></span>
<span class="line"><span style="color:#E1E4E8">  document.title </span><span style="color:#F97583">=</span><span style="color:#9ECBFF"> \`\${</span><span style="color:#E1E4E8">title</span><span style="color:#9ECBFF">} | 我的網站名稱\`</span><span style="color:#E1E4E8">; </span><span style="color:#6A737D">// 更新瀏覽器頁籤上顯示的標題</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D">  // 同樣的道理，更新其他重要的 meta 標籤，例如網頁描述、分享到社群媒體時的預覽圖、標準網址等</span></span>
<span class="line"><span style="color:#B392F0">  updateMetaTags</span><span style="color:#E1E4E8">({</span></span>
<span class="line"><span style="color:#E1E4E8">    title: title,</span></span>
<span class="line"><span style="color:#E1E4E8">    description: to.meta.description </span><span style="color:#F97583">||</span><span style="color:#9ECBFF"> '這是我的網站預設描述'</span><span style="color:#E1E4E8">,</span></span>
<span class="line"><span style="color:#E1E4E8">    image: to.meta.image </span><span style="color:#F97583">||</span><span style="color:#9ECBFF"> '/default-og-image.jpg'</span><span style="color:#E1E4E8">, </span><span style="color:#6A737D">// 設定分享時的預覽圖片</span></span>
<span class="line"><span style="color:#E1E4E8">    url: window.location.href, </span><span style="color:#6A737D">// 設定標準的頁面網址</span></span>
<span class="line"><span style="color:#E1E4E8">  });</span></span>
<span class="line"><span style="color:#E1E4E8">});</span></span></code></pre>
<h3 id="2--為-google-搜尋引擎開快速通道預渲染關鍵頁面">2. 🚀 為 Google 搜尋引擎開「快速通道」：預渲染關鍵頁面</h3>
<p>雖然 Google 搜尋引擎越來越厲害，看得懂 JavaScript 動態產生的內容，但有時候還是主動幫它一把比較穩當。對於那些我們希望在搜尋結果中能有亮眼表現的「重點頁
面」(例如首頁、產品列表頁)，我們可以使用「預渲染」(Prerendering) 技術。簡單來說，就是在網站打包上線前，先把這些頁面「預先畫好」變成靜態的 HTML 檔案，
這樣 Google 爬蟲一來就能馬上看懂頁面內容，不用辛苦地等 JavaScript 執行完畢。</p>
<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="javascript"><code><span class="line"><span style="color:#6A737D">// vite.config.js (如果是使用 Vite 作為建置工具的專案設定檔)</span></span>
<span class="line"><span style="color:#F97583">export</span><span style="color:#F97583"> default</span><span style="color:#E1E4E8"> {</span></span>
<span class="line"><span style="color:#E1E4E8">  plugins: [</span></span>
<span class="line"><span style="color:#B392F0">    vue</span><span style="color:#E1E4E8">(),</span></span>
<span class="line"><span style="color:#6A737D">    // PrerenderSPAPlugin 這個好用的工具可以幫我們完成預渲染的工作</span></span>
<span class="line"><span style="color:#B392F0">    PrerenderSPAPlugin</span><span style="color:#E1E4E8">({</span></span>
<span class="line"><span style="color:#E1E4E8">      staticDir: path.</span><span style="color:#B392F0">join</span><span style="color:#E1E4E8">(__dirname, </span><span style="color:#9ECBFF">'dist'</span><span style="color:#E1E4E8">), </span><span style="color:#6A737D">// 告訴它打包後的檔案會放在哪個資料夾</span></span>
<span class="line"><span style="color:#E1E4E8">      routes: [</span><span style="color:#9ECBFF">'/'</span><span style="color:#E1E4E8">, </span><span style="color:#9ECBFF">'/about'</span><span style="color:#E1E4E8">, </span><span style="color:#9ECBFF">'/products'</span><span style="color:#E1E4E8">, </span><span style="color:#9ECBFF">'/contact'</span><span style="color:#E1E4E8">], </span><span style="color:#6A737D">// 指定哪些路徑的頁面需要被預渲染</span></span>
<span class="line"><span style="color:#E1E4E8">      renderer: </span><span style="color:#F97583">new</span><span style="color:#E1E4E8"> PrerenderSPAPlugin.</span><span style="color:#B392F0">PuppeteerRenderer</span><span style="color:#E1E4E8">({</span></span>
<span class="line"><span style="color:#6A737D">        // 設定在頁面觸發一個叫做 'render-event' 的事件之後才開始進行渲染</span></span>
<span class="line"><span style="color:#6A737D">        // 這樣可以確保頁面上的動態內容都已經載入完成</span></span>
<span class="line"><span style="color:#E1E4E8">        renderAfterDocumentEvent: </span><span style="color:#9ECBFF">'render-event'</span><span style="color:#E1E4E8">,</span></span>
<span class="line"><span style="color:#E1E4E8">      }),</span></span>
<span class="line"><span style="color:#E1E4E8">    }),</span></span>
<span class="line"><span style="color:#E1E4E8">  ],</span></span>
<span class="line"><span style="color:#E1E4E8">};</span></span></code></pre>
<h2 id="-後記專業成長與未來展望">🎯 後記：專業成長與未來展望</h2>
<p>這次專案讓我對現代網頁開發有了更深入的認識，特別是在 GA4 資料分析與前端效能優化的實務應用上。透過這次經驗，我不僅累積了寶貴的技術資產，也磨練了問題解
決與團隊協作的能力。</p>
<p>在技術快速演進的今天，持續學習與自我提升是工程師不可或缺的素養。我期待能將這些經驗應用於未來的專案中，並持續探索更多創新的技術解決方案。</p>
<p>如果您對這個專案有任何想法或合作機會，歡迎隨時與我聯繫。感謝您的閱讀！</p>
<hr>
<div style="text-align: center;">
  <img src="/images/harry-fan.webp" alt="Harry Fan" style="max-width: 300px; border-radius: 50%; margin: 0 auto; display: block;">
  <h3>Harry Fan</h3>
  <p>前端工程師 | 網站效能優化愛好者</p>
  <p>熱愛探索新技術，專注於打造流暢的使用者體驗</p>
</div>`, { headings: 134, localImagePaths: 178, remoteImagePaths: 179, frontmatter: 180, imagePaths: 190 }, [135, 138, 141, 145, 148, 151, 154, 157, 160, 163, 166, 169, 172, 175], { depth: 87, slug: 136, text: 137 }, "-前言為什麼我的網站要最佳化工程師的-os", "🤔 前言：為什麼我的網站要最佳化？工程師的 OS", { depth: 87, slug: 139, text: 140 }, "️️-資料偵探辦案中ga4-如何成為我的神隊友", "🕵️‍♂️ 資料偵探辦案中：GA4 如何成為我的神隊友？", { depth: 142, slug: 143, text: 144 }, 3, "1--打造你的專屬事件情報網", "1. 📊 打造你的專屬「事件」情報網", { depth: 142, slug: 146, text: 147 }, "2--描繪使用者輪廓自訂你想看的資料維度", "2. 👥 描繪使用者輪廓：自訂你想看的資料維度", { depth: 142, slug: 149, text: 150 }, "3--讓廣告預算花在刀口上整合-google-ads-轉換追蹤", "3. 💰 讓廣告預算花在刀口上：整合 Google Ads 轉換追蹤", { depth: 87, slug: 152, text: 153 }, "-網站加速三部曲讓你的網站飛起來", "🚀 網站加速三部曲：讓你的網站「飛」起來！", { depth: 142, slug: 155, text: 156 }, "1️⃣-第一步程式碼化整為零需要時才呼叫", "1️⃣ 第一步：程式碼「化整為零」，需要時才呼叫", { depth: 142, slug: 158, text: 159 }, "2️⃣-第二步圖片瘦身大作戰美觀又不佔頻寬", "2️⃣ 第二步：圖片「瘦身」大作戰，美觀又不佔頻寬", { depth: 142, slug: 161, text: 162 }, "3️⃣-第三步網站健康檢查不可少時刻監控核心效能指標", "3️⃣ 第三步：網站「健康檢查」不可少，時刻監控核心效能指標", { depth: 87, slug: 164, text: 165 }, "-讓-google-愛上我seo-最佳化實戰分享", "🌟 讓 Google 愛上我：SEO 最佳化實戰分享", { depth: 142, slug: 167, text: 168 }, "1--讓每個頁面都有專屬識別證動態-meta-tags", "1. 📝 讓每個頁面都有專屬「識別證」：動態 Meta Tags", { depth: 142, slug: 170, text: 171 }, "常見迷思csr-應用程式也能做好-seo", "常見迷思：CSR 應用程式也能做好 SEO！", { depth: 142, slug: 173, text: 174 }, "2--為-google-搜尋引擎開快速通道預渲染關鍵頁面", "2. 🚀 為 Google 搜尋引擎開「快速通道」：預渲染關鍵頁面", { depth: 87, slug: 176, text: 177 }, "-後記專業成長與未來展望", "🎯 後記：專業成長與未來展望", [], [], { title: 124, pubDate: 181, description: 125, tags: 182, heroImage: 127, coverImage: 127 }, ["Date", "2025-06-12T00:00:00.000Z"], [183, 184, 185, 186, 187, 188, 189], "GA4", "前端優化", "效能調校", "網站分析", "SEO", "Vue3", "網站開發", [], "markdown-style-guide", { id: 191, data: 193, body: 198, filePath: 199, digest: 200, rendered: 201 }, { title: 194, description: 195, pubDate: 196, heroImage: 197 }, "Markdown Style Guide", "Here is a sample of some basic Markdown syntax that can be used when writing Markdown content in Astro.", ["Date", "2024-06-18T16:00:00.000Z"], "/blog-placeholder-1.jpg", 'Here is a sample of some basic Markdown syntax that can be used when writing Markdown content in Astro.\n\n## Headings\n\nThe following HTML `<h1>`—`<h6>` elements represent six levels of section headings. `<h1>` is the highest section level while `<h6>` is the lowest.\n\n# H1\n\n## H2\n\n### H3\n\n#### H4\n\n##### H5\n\n###### H6\n\n## Paragraph\n\nXerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\n\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\n\n## Images\n\n### Syntax\n\n```markdown\n![Alt text](./full/or/relative/path/of/image)\n```\n\n### Output\n\n![blog placeholder](/blog-placeholder-about.jpg)\n\n## Blockquotes\n\nThe blockquote element represents content that is quoted from another source, optionally with a citation which must be within a `footer` or `cite` element, and optionally with in-line changes such as annotations and abbreviations.\n\n### Blockquote without attribution\n\n#### Syntax\n\n```markdown\n> Tiam, ad mint andaepu dandae nostion secatur sequo quae.  \n> **Note** that you can use _Markdown syntax_ within a blockquote.\n```\n\n#### Output\n\n> Tiam, ad mint andaepu dandae nostion secatur sequo quae.  \n> **Note** that you can use _Markdown syntax_ within a blockquote.\n\n### Blockquote with attribution\n\n#### Syntax\n\n```markdown\n> Don\'t communicate by sharing memory, share memory by communicating.<br>\n> — <cite>Rob Pike[^1]</cite>\n```\n\n#### Output\n\n> Don\'t communicate by sharing memory, share memory by communicating.<br>\n> — <cite>Rob Pike[^1]</cite>\n\n[^1]: The above quote is excerpted from Rob Pike\'s [talk](https://www.youtube.com/watch?v=PAAkCSZUG1c) during Gopherfest, November 18, 2015.\n\n## Tables\n\n### Syntax\n\n```markdown\n| Italics   | Bold     | Code   |\n| --------- | -------- | ------ |\n| _italics_ | **bold** | `code` |\n```\n\n### Output\n\n| Italics   | Bold     | Code   |\n| --------- | -------- | ------ |\n| _italics_ | **bold** | `code` |\n\n## Code Blocks\n\n### Syntax\n\nwe can use 3 backticks ``` in new line and write snippet and close with 3 backticks on new line and to highlight language specific syntax, write one word of language name after first 3 backticks, for eg. html, javascript, css, markdown, typescript, txt, bash\n\n````markdown\n```html\n<!doctype html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <title>Example HTML5 Document</title>\n  </head>\n  <body>\n    <p>Test</p>\n  </body>\n</html>\n```\n````\n\n### Output\n\n```html\n<!doctype html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8" />\n    <title>Example HTML5 Document</title>\n  </head>\n  <body>\n    <p>Test</p>\n  </body>\n</html>\n```\n\n## List Types\n\n### Ordered List\n\n#### Syntax\n\n```markdown\n1. First item\n2. Second item\n3. Third item\n```\n\n#### Output\n\n1. First item\n2. Second item\n3. Third item\n\n### Unordered List\n\n#### Syntax\n\n```markdown\n- List item\n- Another item\n- And another item\n```\n\n#### Output\n\n- List item\n- Another item\n- And another item\n\n### Nested list\n\n#### Syntax\n\n```markdown\n- Fruit\n  - Apple\n  - Orange\n  - Banana\n- Dairy\n  - Milk\n  - Cheese\n```\n\n#### Output\n\n- Fruit\n  - Apple\n  - Orange\n  - Banana\n- Dairy\n  - Milk\n  - Cheese\n\n## Other Elements — abbr, sub, sup, kbd, mark\n\n### Syntax\n\n```markdown\n<abbr title="Graphics Interchange Format">GIF</abbr> is a bitmap image format.\n\nH<sub>2</sub>O\n\nX<sup>n</sup> + Y<sup>n</sup> = Z<sup>n</sup>\n\nPress <kbd>CTRL</kbd> + <kbd>ALT</kbd> + <kbd>Delete</kbd> to end the session.\n\nMost <mark>salamanders</mark> are nocturnal, and hunt for insects, worms, and other small creatures.\n```\n\n### Output\n\n<abbr title="Graphics Interchange Format">GIF</abbr> is a bitmap image format.\n\nH<sub>2</sub>O\n\nX<sup>n</sup> + Y<sup>n</sup> = Z<sup>n</sup>\n\nPress <kbd>CTRL</kbd> + <kbd>ALT</kbd> + <kbd>Delete</kbd> to end the session.\n\nMost <mark>salamanders</mark> are nocturnal, and hunt for insects, worms, and other small creatures.', "src/content/blog/markdown-style-guide.md", "07fa54e073f7436b", { html: 202, metadata: 203 }, '<p>Here is a sample of some basic Markdown syntax that can be used when writing Markdown content in Astro.</p>\n<h2 id="headings">Headings</h2>\n<p>The following HTML <code>&#x3C;h1></code>—<code>&#x3C;h6></code> elements represent six levels of section headings. <code>&#x3C;h1></code> is the highest section level while <code>&#x3C;h6></code> is the lowest.</p>\n<h1 id="h1">H1</h1>\n<h2 id="h2">H2</h2>\n<h3 id="h3">H3</h3>\n<h4 id="h4">H4</h4>\n<h5 id="h5">H5</h5>\n<h6 id="h6">H6</h6>\n<h2 id="paragraph">Paragraph</h2>\n<p>Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.</p>\n<p>Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.</p>\n<h2 id="images">Images</h2>\n<h3 id="syntax">Syntax</h3>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="markdown"><code><span class="line"><span style="color:#E1E4E8">![</span><span style="color:#DBEDFF;text-decoration:underline">Alt text</span><span style="color:#E1E4E8">](</span><span style="color:#E1E4E8;text-decoration:underline">./full/or/relative/path/of/image</span><span style="color:#E1E4E8">)</span></span></code></pre>\n<h3 id="output">Output</h3>\n<p><img src="/blog-placeholder-about.jpg" alt="blog placeholder"></p>\n<h2 id="blockquotes">Blockquotes</h2>\n<p>The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a <code>footer</code> or <code>cite</code> element, and optionally with in-line changes such as annotations and abbreviations.</p>\n<h3 id="blockquote-without-attribution">Blockquote without attribution</h3>\n<h4 id="syntax-1">Syntax</h4>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="markdown"><code><span class="line"><span style="color:#85E89D">> Tiam, ad mint andaepu dandae nostion secatur sequo quae.  </span></span>\n<span class="line"><span style="color:#85E89D">> </span><span style="color:#E1E4E8;font-weight:bold">**Note**</span><span style="color:#85E89D"> that you can use </span><span style="color:#E1E4E8;font-style:italic">_Markdown syntax_</span><span style="color:#85E89D"> within a blockquote.</span></span></code></pre>\n<h4 id="output-1">Output</h4>\n<blockquote>\n<p>Tiam, ad mint andaepu dandae nostion secatur sequo quae.<br>\n<strong>Note</strong> that you can use <em>Markdown syntax</em> within a blockquote.</p>\n</blockquote>\n<h3 id="blockquote-with-attribution">Blockquote with attribution</h3>\n<h4 id="syntax-2">Syntax</h4>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="markdown"><code><span class="line"><span style="color:#85E89D">> Don\'t communicate by sharing memory, share memory by communicating.&#x3C;br></span></span>\n<span class="line"><span style="color:#85E89D">> — &#x3C;cite>Rob Pike[</span><span style="color:#DBEDFF;text-decoration:underline">^1</span><span style="color:#85E89D">]&#x3C;/cite></span></span></code></pre>\n<h4 id="output-2">Output</h4>\n<blockquote>\n<p>Don’t communicate by sharing memory, share memory by communicating.<br>\n— <cite>Rob Pike<sup><a href="#user-content-fn-1" id="user-content-fnref-1" data-footnote-ref="" aria-describedby="footnote-label">1</a></sup></cite></p>\n</blockquote>\n<h2 id="tables">Tables</h2>\n<h3 id="syntax-3">Syntax</h3>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="markdown"><code><span class="line"><span style="color:#E1E4E8">| Italics   | Bold     | Code   |</span></span>\n<span class="line"><span style="color:#E1E4E8">| --------- | -------- | ------ |</span></span>\n<span class="line"><span style="color:#E1E4E8">| </span><span style="color:#E1E4E8;font-style:italic">_italics_</span><span style="color:#E1E4E8"> | </span><span style="color:#E1E4E8;font-weight:bold">**bold**</span><span style="color:#E1E4E8"> | </span><span style="color:#79B8FF">`code`</span><span style="color:#E1E4E8"> |</span></span></code></pre>\n<h3 id="output-3">Output</h3>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Italics</th><th>Bold</th><th>Code</th></tr></thead><tbody><tr><td><em>italics</em></td><td><strong>bold</strong></td><td><code>code</code></td></tr></tbody></table>\n<h2 id="code-blocks">Code Blocks</h2>\n<h3 id="syntax-4">Syntax</h3>\n<p>we can use 3 backticks ``` in new line and write snippet and close with 3 backticks on new line and to highlight language specific syntax, write one word of language name after first 3 backticks, for eg. html, javascript, css, markdown, typescript, txt, bash</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="markdown"><code><span class="line"><span style="color:#E1E4E8">```html</span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;!doctype html></span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;html lang="en"></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;head></span></span>\n<span class="line"><span style="color:#E1E4E8">    &#x3C;meta charset="utf-8" /></span></span>\n<span class="line"><span style="color:#E1E4E8">    &#x3C;title>Example HTML5 Document&#x3C;/title></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;/head></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;body></span></span>\n<span class="line"><span style="color:#E1E4E8">    &#x3C;p>Test&#x3C;/p></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;/body></span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;/html></span></span>\n<span class="line"><span style="color:#E1E4E8">```</span></span></code></pre>\n<h3 id="output-4">Output</h3>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="html"><code><span class="line"><span style="color:#E1E4E8">&#x3C;!</span><span style="color:#85E89D">doctype</span><span style="color:#B392F0"> html</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;</span><span style="color:#85E89D">html</span><span style="color:#B392F0"> lang</span><span style="color:#E1E4E8">=</span><span style="color:#9ECBFF">"en"</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">head</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">    &#x3C;</span><span style="color:#85E89D">meta</span><span style="color:#B392F0"> charset</span><span style="color:#E1E4E8">=</span><span style="color:#9ECBFF">"utf-8"</span><span style="color:#E1E4E8"> /></span></span>\n<span class="line"><span style="color:#E1E4E8">    &#x3C;</span><span style="color:#85E89D">title</span><span style="color:#E1E4E8">>Example HTML5 Document&#x3C;/</span><span style="color:#85E89D">title</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;/</span><span style="color:#85E89D">head</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;</span><span style="color:#85E89D">body</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">    &#x3C;</span><span style="color:#85E89D">p</span><span style="color:#E1E4E8">>Test&#x3C;/</span><span style="color:#85E89D">p</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">  &#x3C;/</span><span style="color:#85E89D">body</span><span style="color:#E1E4E8">></span></span>\n<span class="line"><span style="color:#E1E4E8">&#x3C;/</span><span style="color:#85E89D">html</span><span style="color:#E1E4E8">></span></span></code></pre>\n<h2 id="list-types">List Types</h2>\n<h3 id="ordered-list">Ordered List</h3>\n<h4 id="syntax-5">Syntax</h4>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="markdown"><code><span class="line"><span style="color:#FFAB70">1.</span><span style="color:#E1E4E8"> First item</span></span>\n<span class="line"><span style="color:#FFAB70">2.</span><span style="color:#E1E4E8"> Second item</span></span>\n<span class="line"><span style="color:#FFAB70">3.</span><span style="color:#E1E4E8"> Third item</span></span></code></pre>\n<h4 id="output-5">Output</h4>\n<ol>\n<li>First item</li>\n<li>Second item</li>\n<li>Third item</li>\n</ol>\n<h3 id="unordered-list">Unordered List</h3>\n<h4 id="syntax-6">Syntax</h4>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="markdown"><code><span class="line"><span style="color:#FFAB70">-</span><span style="color:#E1E4E8"> List item</span></span>\n<span class="line"><span style="color:#FFAB70">-</span><span style="color:#E1E4E8"> Another item</span></span>\n<span class="line"><span style="color:#FFAB70">-</span><span style="color:#E1E4E8"> And another item</span></span></code></pre>\n<h4 id="output-6">Output</h4>\n<ul>\n<li>List item</li>\n<li>Another item</li>\n<li>And another item</li>\n</ul>\n<h3 id="nested-list">Nested list</h3>\n<h4 id="syntax-7">Syntax</h4>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="markdown"><code><span class="line"><span style="color:#FFAB70">-</span><span style="color:#E1E4E8"> Fruit</span></span>\n<span class="line"><span style="color:#FFAB70">  -</span><span style="color:#E1E4E8"> Apple</span></span>\n<span class="line"><span style="color:#FFAB70">  -</span><span style="color:#E1E4E8"> Orange</span></span>\n<span class="line"><span style="color:#FFAB70">  -</span><span style="color:#E1E4E8"> Banana</span></span>\n<span class="line"><span style="color:#FFAB70">-</span><span style="color:#E1E4E8"> Dairy</span></span>\n<span class="line"><span style="color:#FFAB70">  -</span><span style="color:#E1E4E8"> Milk</span></span>\n<span class="line"><span style="color:#FFAB70">  -</span><span style="color:#E1E4E8"> Cheese</span></span></code></pre>\n<h4 id="output-7">Output</h4>\n<ul>\n<li>Fruit\n<ul>\n<li>Apple</li>\n<li>Orange</li>\n<li>Banana</li>\n</ul>\n</li>\n<li>Dairy\n<ul>\n<li>Milk</li>\n<li>Cheese</li>\n</ul>\n</li>\n</ul>\n<h2 id="other-elements--abbr-sub-sup-kbd-mark">Other Elements — abbr, sub, sup, kbd, mark</h2>\n<h3 id="syntax-8">Syntax</h3>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0" data-language="markdown"><code><span class="line"><span style="color:#E1E4E8">&#x3C;abbr title="Graphics Interchange Format">GIF&#x3C;/abbr> is a bitmap image format.</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8">H&#x3C;sub>2&#x3C;/sub>O</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8">X&#x3C;sup>n&#x3C;/sup> + Y&#x3C;sup>n&#x3C;/sup> = Z&#x3C;sup>n&#x3C;/sup></span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8">Press &#x3C;kbd>CTRL&#x3C;/kbd> + &#x3C;kbd>ALT&#x3C;/kbd> + &#x3C;kbd>Delete&#x3C;/kbd> to end the session.</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8">Most &#x3C;mark>salamanders&#x3C;/mark> are nocturnal, and hunt for insects, worms, and other small creatures.</span></span></code></pre>\n<h3 id="output-8">Output</h3>\n<p><abbr title="Graphics Interchange Format">GIF</abbr> is a bitmap image format.</p>\n<p>H<sub>2</sub>O</p>\n<p>X<sup>n</sup> + Y<sup>n</sup> = Z<sup>n</sup></p>\n<p>Press <kbd>CTRL</kbd> + <kbd>ALT</kbd> + <kbd>Delete</kbd> to end the session.</p>\n<p>Most <mark>salamanders</mark> are nocturnal, and hunt for insects, worms, and other small creatures.</p>\n<section data-footnotes="" class="footnotes"><h2 class="sr-only" id="footnote-label">Footnotes</h2>\n<ol>\n<li id="user-content-fn-1">\n<p>The above quote is excerpted from Rob Pike’s <a href="https://www.youtube.com/watch?v=PAAkCSZUG1c">talk</a> during Gopherfest, November 18, 2015. <a href="#user-content-fnref-1" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref">↩</a></p>\n</li>\n</ol>\n</section>', { headings: 204, localImagePaths: 307, remoteImagePaths: 308, frontmatter: 309, imagePaths: 311 }, [205, 208, 212, 215, 218, 222, 226, 230, 233, 236, 239, 242, 245, 248, 250, 252, 255, 257, 259, 262, 264, 266, 269, 271, 273, 276, 279, 281, 283, 286, 288, 290, 293, 295, 297, 300, 302, 304], { depth: 87, slug: 206, text: 207 }, "headings", "Headings", { depth: 209, slug: 210, text: 211 }, 1, "h1", "H1", { depth: 87, slug: 213, text: 214 }, "h2", "H2", { depth: 142, slug: 216, text: 217 }, "h3", "H3", { depth: 219, slug: 220, text: 221 }, 4, "h4", "H4", { depth: 223, slug: 224, text: 225 }, 5, "h5", "H5", { depth: 227, slug: 228, text: 229 }, 6, "h6", "H6", { depth: 87, slug: 231, text: 232 }, "paragraph", "Paragraph", { depth: 87, slug: 234, text: 235 }, "images", "Images", { depth: 142, slug: 237, text: 238 }, "syntax", "Syntax", { depth: 142, slug: 240, text: 241 }, "output", "Output", { depth: 87, slug: 243, text: 244 }, "blockquotes", "Blockquotes", { depth: 142, slug: 246, text: 247 }, "blockquote-without-attribution", "Blockquote without attribution", { depth: 219, slug: 249, text: 238 }, "syntax-1", { depth: 219, slug: 251, text: 241 }, "output-1", { depth: 142, slug: 253, text: 254 }, "blockquote-with-attribution", "Blockquote with attribution", { depth: 219, slug: 256, text: 238 }, "syntax-2", { depth: 219, slug: 258, text: 241 }, "output-2", { depth: 87, slug: 260, text: 261 }, "tables", "Tables", { depth: 142, slug: 263, text: 238 }, "syntax-3", { depth: 142, slug: 265, text: 241 }, "output-3", { depth: 87, slug: 267, text: 268 }, "code-blocks", "Code Blocks", { depth: 142, slug: 270, text: 238 }, "syntax-4", { depth: 142, slug: 272, text: 241 }, "output-4", { depth: 87, slug: 274, text: 275 }, "list-types", "List Types", { depth: 142, slug: 277, text: 278 }, "ordered-list", "Ordered List", { depth: 219, slug: 280, text: 238 }, "syntax-5", { depth: 219, slug: 282, text: 241 }, "output-5", { depth: 142, slug: 284, text: 285 }, "unordered-list", "Unordered List", { depth: 219, slug: 287, text: 238 }, "syntax-6", { depth: 219, slug: 289, text: 241 }, "output-6", { depth: 142, slug: 291, text: 292 }, "nested-list", "Nested list", { depth: 219, slug: 294, text: 238 }, "syntax-7", { depth: 219, slug: 296, text: 241 }, "output-7", { depth: 87, slug: 298, text: 299 }, "other-elements--abbr-sub-sup-kbd-mark", "Other Elements — abbr, sub, sup, kbd, mark", { depth: 142, slug: 301, text: 238 }, "syntax-8", { depth: 142, slug: 303, text: 241 }, "output-8", { depth: 87, slug: 305, text: 306 }, "footnote-label", "Footnotes", [], [], { title: 194, description: 195, pubDate: 310, heroImage: 197 }, "Jun 19 2024", []];

export { _astro_dataLayerContent as default };
